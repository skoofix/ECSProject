//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActiveOrbsForTest;

    public static Entitas.IMatcher<GameEntity> ActiveOrbsForTest {
        get {
            if (_matcherActiveOrbsForTest == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveOrbsForTest);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActiveOrbsForTest = matcher;
            }

            return _matcherActiveOrbsForTest;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Invoker.ActiveOrbsForTest activeOrbsForTest { get { return (Code.Gameplay.Features.Invoker.ActiveOrbsForTest)GetComponent(GameComponentsLookup.ActiveOrbsForTest); } }
    public System.Collections.Generic.List<GameEntity> ActiveOrbsForTest { get { return activeOrbsForTest.Value; } }
    public bool hasActiveOrbsForTest { get { return HasComponent(GameComponentsLookup.ActiveOrbsForTest); } }

    public GameEntity AddActiveOrbsForTest(System.Collections.Generic.List<GameEntity> newValue) {
        var index = GameComponentsLookup.ActiveOrbsForTest;
        var component = (Code.Gameplay.Features.Invoker.ActiveOrbsForTest)CreateComponent(index, typeof(Code.Gameplay.Features.Invoker.ActiveOrbsForTest));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceActiveOrbsForTest(System.Collections.Generic.List<GameEntity> newValue) {
        var index = GameComponentsLookup.ActiveOrbsForTest;
        var component = (Code.Gameplay.Features.Invoker.ActiveOrbsForTest)CreateComponent(index, typeof(Code.Gameplay.Features.Invoker.ActiveOrbsForTest));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveActiveOrbsForTest() {
        RemoveComponent(GameComponentsLookup.ActiveOrbsForTest);
        return this;
    }
}
